; 将所有节点信息在这里填写
;    第一个字段                  为远程服务器内网IP
;    第二个字段 ansible_user     为登录远程服务器用户名
;    第三个字段 ansible_ssh_pass 为登录远程服务器用户密码
[all]
192.168.56.11 ansible_user=vagrant ansible_ssh_pass=vagrant
192.168.56.12 ansible_user=vagrant ansible_ssh_pass=vagrant
192.168.56.13 ansible_user=vagrant ansible_ssh_pass=vagrant

; 公有云：
;    一般公有云都有提供负载均衡产品，且不允许自己创建 虚拟IP 即 VIP。
;    请将lb节点组留空，仅保留组名，购买公有云 slb 服务，将 lb_mode 设置为 slb，将 lb_kube_apiserver_ip 设置为购买到的 slb 内网ip 。
;
; 私有云：
;    当 lb_mode 设置为 nginx 时，请将 所有节点! 所有节点! 所有节点! 设置到 lb 节点组中，安装nginx进行负载。
;    当 lb_mode 设置为 haproxy 时，请先与服务器提供部门协商保留一个IP作为 VIP，一般2节点就够安装 haproxy 和 keepalived 了，
;       lb节点组中第一个节点为 keepalived 的 master 节点，剩下的都为 backed 节点
[lb]
192.168.56.11
192.168.56.12
192.168.56.13

; 注意etcd集群必须是1,3,5,7...奇数个节点
[etcd]
192.168.56.11
192.168.56.12
192.168.56.13

[kube-master]
192.168.56.11
192.168.56.12
192.168.56.13

[kube-worker]
192.168.56.11
192.168.56.12
192.168.56.13

; 预留组，后续添加master节点使用，暂未实现
[new-master]
; 192.168.56.14

; 预留组，后续添加worker节点使用
[new-worker]
; 192.168.56.14

;-------------------------------------- 以下为基础信息配置 ------------------------------------;
[all:vars]
; 是否跳过节点物理资源校验，Master节点要求2c4g以上，Worker节点要求4c8g以上
skip_verify_node=false
; kubernetes版本
kube_version="1.12.4"
; 负载均衡模式(有nginx和haproxy,slb三个选项。默认使用nginx，选择haproxy或slb模式时必须设置 lb_kube_apiserver_ip 和 lb_kube_apiserver_port)
lb_mode="nginx"
; 使用负载均衡集群 Master IP
lb_kube_apiserver_ip="192.168.56.14"
; 使用负载均衡集群 Master Port
lb_kube_apiserver_port="8443"
; Pod根容器
pod_infra_container_image="registry.aliyuncs.com/google_containers/pause:3.1"
; kubernetes各组件镜像仓库前缀
kube_image_repository="registry.aliyuncs.com/google_containers"
; 集群内部dns域名
kube_dns_domain="cluster.local"
; 集群pod ip段
kube_pod_subnet="10.244.0.0/18"
; 集群service ip段
kube_service_subnet="10.244.64.0/18"
; NodePort端口范围（因为ingress-nginx使用了 NodePort svc占用了30080 30443这两个端口故，端口范围不能小于30080-30443）
kube_service_node_port_range="30000-32767"
; 集群网络插件，目前支持flannel
cluster_network="flannel"
; Kubelet 根目录
kubelet_root_dir="/var/lib/kubelet"
; docker容器存储目录
docker_storage_dir="/var/lib/docker"