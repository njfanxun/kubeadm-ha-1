- block:
  - name: 在 etcd 节点创建 etcd 相关目录
    file: 
      name: "{{ item }}"
      state: directory
    with_items:
    - /var/lib/etcd
    - /etc/kubernetes/pki/etcd
    - /etc/kubernetes/manifests

  - name: 在 etcd 节点拉取相关镜像
    shell: docker pull {{ item }}
    with_items:
    - "{{ pod_infra_container_image }}"
    - "{{ etcd_image }}"

  when: inventory_hostname in groups['etcd']

- name: 在 master 节点创建 etcd 证书相关目录
  file: 
    name: "{{ item }}"
    state: directory
  with_items:
  - /etc/kubernetes/pki/etcd
  when: inventory_hostname in groups['kube-master']

# 生成证书并分发
- include_tasks: certificate.yaml

- block:
  - name: 生成 etcd static pod 文件
    template: 
      src: etcd-external.yaml.j2
      dest: /etc/kubernetes/manifests/etcd-external.yaml
      owner: root
      mode: 0644
  
  - name: 生成临时 kubelet unit 文件
    template: 
      src: 20-kubelet-override.conf.j2
      dest: /etc/systemd/system/kubelet.service.d/20-kubelet-override.conf
      owner: root
      mode: 0644
  
  - name: 重新加载 daemon
    systemd:
      daemon_reload: yes
  
  - name: 临时启动 kubelet 以引导 etcd 运行
    service:
      name: kubelet
      state: restarted
      enabled: yes
  
  - name: 以轮询的方式等待 etcd 运行完成
    shell: >
      docker run --name etcd-healthcheck --net host -e ETCDCTL_API=3 
      -v /etc/kubernetes/pki/etcd:/etc/kubernetes/pki/etcd
      --rm {{ etcd_image }}
      etcdctl 
      --endpoints=https://[127.0.0.1]:2379
      --cacert=/etc/kubernetes/pki/etcd/ca.crt
      --cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt
      --key=/etc/kubernetes/pki/etcd/healthcheck-client.key
      endpoint health
    register: etcd_status
    until: '"is healthy" in etcd_status.stdout'
    retries: 60
    delay: 5
  when: inventory_hostname in groups['etcd']

- block:
  - name: 移除临时 kubelet unit 文件
    file: 
      name: /etc/systemd/system/kubelet.service.d/20-kubelet-override.conf
      state: absent
  - name: 重新加载 daemon
    systemd:
      daemon_reload: yes
  - name: 停止临时启动 kubelet
    service:
      name: kubelet
      state: stopped
      enabled: yes
  when: inventory_hostname in groups['kube-master'] or (inventory_hostname in groups['kube-worker'])