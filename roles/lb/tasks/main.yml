# 系统基础软件环境
- include_tasks: nginx.yml
  when: lb_mode == "nginx"

- include_tasks: haproxy.yml
  when: lb_mode == "haproxy"

- name: 生成临时 kubelet unit 文件
  template: 
    src: 20-kubelet-override.conf.j2
    dest: /etc/systemd/system/kubelet.service.d/20-kubelet-override.conf
    owner: root
    mode: 0644

- name: 重新加载 daemon
  systemd:
    daemon_reload: yes

- name: 临时启动 kubelet 以引导 lb 运行
  service:
    name: kubelet
    state: restarted
    enabled: yes

- name: 以轮询的方式等待 nginx 运行完成
  shell: nc -z -w 3 127.0.0.1 {{ lb_kube_apiserver_port }}
  register: nginx_status
  until: nginx_status.rc == 0
  retries: 60
  delay: 5
  when: lb_mode == "nginx"

- block:
  - name: 以轮询的方式等待 haproxy 运行完成
    shell: nc -z -w 3 127.0.0.1 {{ lb_kube_apiserver_port }}
    register: haproxy_status
    until: haproxy_status.rc == 0
    retries: 60
    delay: 5

  - name: 以轮询的方式等待 keepalived 运行完成
    shell: nc -z -w 3 {{ KUBE_APISERVER_IP | trim }} {{ lb_kube_apiserver_port }}
    register: keepalived_status
    until: keepalived_status.rc == 0
    retries: 60
    delay: 5
  when: lb_mode == "haproxy"

- block:
  - name: 移除临时 kubelet unit 文件
    file: 
      name: /etc/systemd/system/kubelet.service.d/20-kubelet-override.conf
      state: absent
  - name: 重新加载 daemon
    systemd:
      daemon_reload: yes
  - name: 停止临时启动 kubelet
    service:
      name: kubelet
      state: stopped
      enabled: yes
  when: inventory_hostname in groups['kube-master'] or (inventory_hostname in groups['kube-worker'])